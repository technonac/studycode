# -*- coding: utf-8 -*-
# 变量赋值
# 链式赋值
x = 1
y = x = x + 1

# 不支持x++,--x
x += 1
# 多重赋值 一个值为1的整型对象呗船舰，该对象的同一个引用被赋值给x,y,z,也就是将一个对象赋值给了多个变量
x = y = z = 1

# 多元赋值 multituple 等号两边的对象都元组
x, y, z = 1, 2, 'a string'
(x, y, z) = (1, 2, 'a string')  # 等价

# 变量交换,不需要第三个变量
x, y = 1, 2
x, y = y, x

# 标识符
"""
_xxx:类中私有变量名,模块或者类外不可以使用
_xxx_:系统定义的名称
"""

# 引用
v = 1
del v  # 销毁对象的别名


print(__name__)

"""
主程序入口
绝大部分的模块创建的目的是为了被别人调用而不是作为独立执行的脚本
只有一个模块，也就是包含主程序模块会被执行
那些没有被进的代码行，在模块被导入时就会执行
因此，通常只有主程序模块中有大量的顶级可执行代码，所有其他被导入的模块只应该有很少的顶级执行代码，
所有的功能都应该封装在函数或者类中

__name__ 系统变量
当模块被导入时,值为模块的名字
当模块被直接执行，值为__main__

因此一般主程序中编写测试代码 
"""
if __name__ == '__main__':
    print("main function is called")
